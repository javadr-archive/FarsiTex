%!PS-Adobe-2.0
%%Creator: dvips 5.58 Copyright 1986, 1994 Radical Eye Software
%%Title: paper2-9.dvi
%%CreationDate: Thu Feb 05 11:07:57 1998
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: D:\FTEX\BIN\DVIPS32.EXE paper2-9.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.12.24:1015
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300
(/PUBLIC/FTEX-2/SAMPLES/paper2-9.dvi) @start /Fa 40 255
df<12021204120C121812101220A21240A212C012B812FCA212F81270070F7C8E0D>44
D<136013F0A2EA01B0A2EA0360A2EA01C013F0EA0370EA06005A123812F012C00C0F77B0
0B>101 D<1304130C130E130C13081300A613201370A213F01201EA0FF8EA7F7E127EEA
FC3EEA701E0F1581940D>128 D<147C14FCEB01FEEB03DE140E1307A214FFA214FE1301
EB00181438147014E01301EB03C0EB0780EB1F00EAC0FEEA7FFCEA1FF0EA07C01817848A
12>I<13201370A213F01201EA0FF8EA7F7E127EEAFC3EEA701EC7FCA4EA0440EA0CC012
1D120CEA08800F1381890D>131 D<13801201120312071300A4120EA5120C121CA51218
A21238A31230A312701260A35AA25A092278A109>144 D<120112031207A21206120EA3
120C121CA41218A21238A41230A21270A31260A212E0A312F012FE127EA2121E082278A1
0D>I<1320137013F01370A413E012FF13C0130012FCC7FCA51218A21238A212100C1680
8B0A>147 D<1320137013F01370A413E012FF13C0130012FCC7FCA51263A212E7A21242
12201270A21260A20C1B808B0A>149 D<1384EA018C13CE138C1308C7FCA41320137013
F01370A413E012FF13C0130012FC0F1580940A>151 D<13FCEA03FE487EEB1FC0380E07
F0380C03FE390001FFF07F010313E090381FFC0048B4C7FCEAFFF813C048C8FC12F01C0F
808E1A>159 D<13301338137C137E133E131F130F1307A21303A313071306EA601EEAFF
FC13F813E0130010137B9214>162 D<1408141CA2143C141C141E140E140CA3141C1438
147014F0EB03E0EB0FC0EB3F00EA01FEEAFFF8EA7FE0EA1F801715868810>164
D<15201570A21410EB2030EB706090386070309038E0F0603903F1F8E0000FB512C0007F
EB7F80EA7EFE39FCFC3E00D87078C7FC1C0E818D18>168 D<13201370A213F01201EA0F
F8EA7F7E127EEAFC3EEA701EC7FCA5EA0CC0A2121DA2EA0880EA0400120EA2120CA20F19
81890D>179 D<EC10801431EC39C0EC31800221C7FC91C8FCA2120812185AA24815E015
010070140700F0143F00FEEB03FF007FB512FCEDF0F86CECC0FC6C9038FE0078000701E0
133826157A942A>I<13111333EB3B80EB3300132290C7FCA613201370A213F01201EA0F
F8EA7F7E127EEAFC3EEA701E111581940D>I<133FEBFFC04813F0EBC7FE390381FFFC90
38007FF8C7FC903803FF80EB1FF1EBFF813807FC03D8FFF0EBFF80EBC0010100140000F8
6D7ECAFCA41322136613EE136613441330A21370A21320211D808E1F>187
D<133FEBFFC04813F0EBC7FE390381FFFC9038007FF8C7FC903803FF80EB1FF1EBFF8138
07FC03D8FFF0EBFF80EBC0010100140000F86D7E210F808E1F>189
D<140CA2141E141FEC0F80A21407A2EC0600140E5C5C1478495AEB07C0EB3F8048B4C7FC
EAFFFC13F0EA1F801914868712>194 D<9038201020903870307090386070609038E0F0
F03803F1F1000FB5FC007F147E387EFEFE39FCFC7C3C397078381C1F0A81891C>198
D<1460A214E0497E80A25C495AA21480A691C8FC5BA215384AB4FCEB0607D90E0F138014
3FEC7C0F90390CF00700EB1DC090381F800690381E000E011C5B0118137849485A903860
1FE0B6EA87C06C14FF121F390FFC007F22247BA326>205 D<130CA2131C133E133FA213
3E5BA21370A6136013E0A21407EC3FE0EBC0FFD801C113F013C7EBCF8190389E00E0EA03
B801F013C0EBC00190388003809038000F000006133E380C03FCB512F014C049C7FC1380
1C2480A319>207 D<1870EF01E01707EF3FC0EFFF00EE03F8EE0FE0047FC7FCED01FCED
03F0ED07C093C8FC150CA3151E151F82ED0FE06F7E6F7E6F7E00086E7E0018157F486F7E
48ED37C01633EE31E000E0ED70F06CEC03E000FC91381FC0783BFFC003FF807F6CB54848
7E03F0131E001F0280130E000301F0C9FC34247AA234>215 D<150E153C15FCEC07F8EC
1FE0EC7F00EB01FCEB0FE0EB3F80017EC7FC13F813E0EA0180A3487E7F7FEA01FC6C7E13
7F6D7E6D7E6D7E6D7EEB06F814788080130CEB3C0FD8FFF813E0EBF0079038C003C038FE
00011F2380A219>I<13021306130EA2131CA5133C1338A41378A31370A213F0A51201A2
137012031207EA0E78EAFE7E12FCEAF83EEAE01C0F2280A10E>220
D<EB03C0EB1FE0EB7FF0EBFFFC3903FBFFC01387EA0707000E13F3000CEBF000121C6D5A
381801C090C8FC1238A21230A51270A21260A312E05AA25A1A1D808719>I<130E131FEB
3F8013F33801E3C012033807F3E0380FFFF000FE13FE5A38F83FBE38E00F0E170C808B16
>I<EB03E0EB0FF8EB3FFCEB7C0013F0EA01C05B1203A27FEBE00FEBF0FF3801FFFE4813
E038FFFE0013E090C7FC12E01812809117>228 D<5BEB0380A21400A290C7FCA8133813
7C13FE1201EA03DE138EEA070E13BE13FEA2EA03ECEA000C131CEAFFF85B5B90C7FC111E
809D0D>234 D<EB0820EB1C70A2EB1860A290C7FCA81338137C13FE1201EA03DE138EEA
070E13BE13FEA2EA03ECEA000C131CEAFFF85B5B90C7FC141E809D0D>236
D<EB0380130FEB1FC0133F137B13E3EA01F3EA03FF000F138012FE38FC7F00EAF80C00E0
C7FC120D808C11>245 D<144014C01301130014801400A51406A2140EA21204120C5A5A
140C5AA200E013081438147038F001E0B512C01400EA7FFCEA3FE0171D7C931A>I<1320
13601370136013401300A41320137013F01370A413E012FF13C0130012FC0C1580940A>
I<1430147C14FC13011303149CEB071C143C14FCA3EB001814381430147014E01301EB03
C0EB0F80EB3F00EAC0FEEA7FFCEA1FF0EA07C01618848B12>I<14F0130113031307130E
EB1C601338EB70E0EB61C0EBC380EA01C7EB9F00EA03FC38FFF87EEBFFFEA3381FFC00EA
07FEEA060F7FA21207138E13FE5B120313F0171C809016>250 D<130C131E131FEB3F80
14C014E014F0EB7FF8EBE3FCEA01C3EB839C141CEB870CEBCF1CEBFF3C4813F8B5FC14F0
38FE01E000F0C7FC1614809315>I<ED3F800003EB01FF0006010F1300485B48013EC7FC
143C48137CEC7FE0486D7E141F00E0EB0070A26C5C00FCEB03C039FFC01F8090B5C7FC6C
13FC001F13F00003138021137D8323>I<ED03E0150F153F157CEDE04091380380004AC7
FC0002130E0006130C485B481338143C48EB3F804814F8141F00E01303EC0038A25D6C49
5A00FCEB07C026FF807FC7FCEBFFFE6C13F86C13E0D80FFEC8FC231A7B9026>I<132013
7013F01370A413E012FF13C0130012FCC7FCA312211263EA7380EA630012420C14808B0A
>I E /Fb 12 117 df<B512FC380F003C140C1404A214061402A213011400A35B13FF13
037FA3140113001402A31406A2140C143CB512FC181C7E9B1C>69
D<B51280380F00E01478143C141C141EA5141C143C147814E0EBFF8090C7FCACEAFFF017
1C7E9B1C>80 D<3807E080EA1C19EA30051303EA600112E01300A36C13007E127CEA7FC0
EA3FF8EA1FFEEA07FFC61380130FEB07C0130313011280A300C01380A238E00300EAD002
EACC0CEA83F8121E7E9C17>83 D<007FB512C038700F010060130000401440A200C01420
1280A300001400B1497E3803FFFC1B1C7F9B1E>I<39FFF07FC0390FC01E003807800CEB
C00800035B6C6C5A13F000005BEB7880137C013DC7FC133E7F7F80A2EB13C0EB23E01321
EB40F0497E14783801007C00027F141E0006131F001F148039FF807FF01C1C7F9B1F>88
D<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260EA70021230EA1804EA0C18EA03
E00F127F9112>99 D<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>105
D<EA03F0EA0E1CEA1806487E00701380EA600100E013C0A600601380EA700300301300EA
1806EA0E1CEA03F012127F9115>111 D<EAFC7CEA1D87381E0180001C13C0EB00E0A214
70A614E0A2EB01C0001E1380381D0700EA1CFC90C7FCA7B47E141A7F9117>I<EAFCE0EA
1D38EA1E78A2EA1C301300ACEAFFC00D127F9110>114 D<EA1F90EA2070EA4030EAC010
A212E0EAF800EA7F80EA3FE0EA0FF0EA00F8EA8038131812C0A2EAE010EAD060EA8FC00D
127F9110>I<1204A4120CA2121C123CEAFFE0EA1C00A91310A5120CEA0E20EA03C00C1A
7F9910>I E /Fc 64 255 df<1210A2122012601240A212C0A21280A212B812FCA2127C
1238060F7D8E0D>44 D<127012F8A3127005057C840D>46 D<12201270A212F87E127C12
7E123EA27E7E1380A21207A2EA03C0A41201A41200A613400A1E779D1C>49
D<1220EA6001EA7003EAF807EAFE1EEA7FFE13FCEA3FF813F0EA1FC013007EA2EA0780A3
1203A213C01201A51200A51340101E7A9D1C>I<EA20023860060238700F0600F813FE38
FC3FFC387FFFF8EBF9F0383FF0E0EBE0006C5A90C7FC7EA26C7EA31203A27F1201A51200
A51340171E7D9D1C>I<137C13FF1221EA63FEEA7780B4C7FC14606C13E0EBFFC06C1380
14006C5A13F86CC7FCA36C7EA31203A51201A7120013207B9F1C>I<1340136013F07F13
7C13FEEA01DFEB8F80EA030F380607C01303380C01E0001813F013004813F81478127000
601338143C00E0131CA51438EAF02038F878F8387FFFF0A26C13E06C13C038078F801620
7D9F1C>I<7EEAC006EAF1FE12FFA3127FEA1F8EEA000EA313061307A71480A314C01303
14E0A214C01301A3EB0080131F7C9E1C>I<1240006013080070131800F8133C147C7E00
7E13FC003E13F8383F01F0381F03E01383000F13C0EA0787EBC7803803CF00A2EA01EF13
FEA26C5AA31378A41330A31310161E7D9D1C>I<5AEA07C0EA0FE0EA1FF0A2123FEA7870
1270EA607812F0EAFCF812FFA2127F123FEA06781200A51338A2133CA2133EA2131FA213
0EA2130410207A9F1C>57 D<127012F8A312701200A9127012F8A3127005137C920D>I<
12FCA2120CB3B012FCA206267F9E0D>91 D<12FCA212C0B3B012FCA206267A9E0D>93
D<EA0780EA0FC0123FEA7880EAE0001360EAFFE0EA7F00123C123012400B0B80AC0B>98
D<EA01C0123FEAFE0012C00A047F830B>I<1380EA01C0A3EA00801300A61380EA01C0A3
EA03E0EA1FF0EAFFFCEAFE7EEAFC3EEAF01C0F1581940D>128 D<EB0780EB0FC0EB1FE0
131D1338EB30601338EB3FF8A2131F1307EB0060A214E0EB01C0A2EB0380130FEB1F00EA
C0FEEA7FFCEA0FF8EA03E01517828A12>I<134013C0A37FA31207120FEA1F70123C1278
EAFBF0B47E13B8EAFE1C38001F80130FA2130311147B9315>I<1380EA01C0A3EA03E0EA
1FF0EAFFFCEAFE7EEAFC3EEAF01CC7FCA4EA0220EA0770A3EA02200F1381890D>I<1403
124000F0EB07806C14C07EB41480D87F801300EBC00613E0EA3DF012001378EB3C0E131E
EB0E0C1307EB038CA2EB01C8EB00D814F81478147014301438147814F814D8EB039C1307
EB3FFC5CA25C1A227EA11B>I<12201260A212E0AB1260A31270A71230A81220A204227A
A109>144 D<12201260A212E0A81260A61270A91230A21238123CEA3F80121F120F1203
09227BA10D>I<5AEA038013C0A21201A21200120112FF1380130012FCC7FCA51204120E
A312040A16808B0A>147 D<5AEA038013C0A21201A21200120112FF1380130012FCC7FC
A5EA1080EA39C0A3EA1080EA0400120EA312040A1B808B0A>149
D<EA1080EA39C0A3EA1080C7FCA45AEA038013C0A21201A21200120112FF1380130012FC
0A1580940A>151 D<EA0FC0EA1FF0487EEA38FE38303F8038201FF8390007FFC07F010F
138090387FF800D803FEC7FCEAFFF013C048C8FC12E01A0F808E1A>159
D<1202EA078013C013E0EA03F0120013781338131CA2130CA3131CEAC03CEAFFF813F013
E013000E137B9214>162 D<1480EB01C014E0A2130014F014701430A31470146014E013
01EB03C0EB0F80EB3F00EA01FEB45AEA7FF0EA0FC01415848810>164
D<13101338A3131090C7FCA85BEB038014C0A2130114E013001460A314E0A2EB01C01303
EB0780EB0F00133FEA01FEEAFFF86C5AEA0FC01322839511>I<14031580A21483903880
C3C038018181EBC1C001C31380000313F1001FB5FCB4481300A238F8FC7ED8F078C7FC1A
0E818D18>168 D<5B497EA36DC7FC90C8FCEB0820EB1C70A3EB082090C8FCA214031580
A21483903880C3C038018181EBC1C001C31380000313F1001FB5FCB4481300A238F8FC7E
D8F078C7FC1A1B819A18>170 D<1507ED3FE0EDFFF05C5CEC078091380F0070021C1330
EB801800014913706D4813E0ECC0013A03C18007C0D81FE1EB7F8000FEB5EAFE0015F8D8
F87F13E026F03FF8C7FCD80018C8FC13102414819124>172 D<1380EA01C0A3EA03E0EA
1FF0EAFFFCEAFE7EEAFC3EEAF01CC7FCA5EA0220EA0770A3EA0220EA0080EA01C0A3EA00
800F1981890D>179 D<EA0220EA0770A3EA0220C7FCA61380EA01C0A3EA03E0EA1FF0EA
FFFCEAFE7EEAFC3EEAF01C0F1581940D>181 D<EA03F0EA07FC48B47E380E3FF0390C0F
FFE0EA0803C66C13C090380FFE00EB3FC63801FE06380FF807D8FFE013FFEB8003EAFE00
00F81300C9FCA31304130EA313042017808E1F>185 D<EA03F0EA07FC48B47E380E3FF0
390C0FFFE0EA0803C66C13C090380FFE00EB3FC63801FE06380FF807D8FFE013FFEB8003
EAFE0000F81300200F808E1F>189 D<1304A2130EA21306A21307A3EB0380A514C0EA40
0738601FE038FBFFF038FFFCFCEA7FF0EBC07C383E001C16167C9519>192
D<144014E014F014F8147E143EA2141E141814381430147014F0EB03E0EB07C0EB3F8038
01FF00EAFFFCEA7FF0EA0FC01714848712>194 D<9038808080000113C101C113C014C3
3803C3E3001FB512F0B5EAFEFC13FE39F8FCFC7C39F078781C1E0A81891C>198
D<13021307A3130290C8FCEB1040EB38E0A3EB104090C8FCA59038808080000113C101C1
13C014C33803C3E3001FB512F0B5EAFEFC13FE39F8FCFC7C39F078781C1E1A81991C>
200 D<15201570A3152092C7FCA7ED01E0ED03F01507A2ED0F700020EC0E380060141C00
40EC181800C01530151C16706CEC1FE06CEC0FC000FCEC7FE03AFFC00FFFFE6CB512F96C
ECC07E6C9038FE001E000301E01300271F7B9D2C>211 D<134013E0A3134090C7FCA813
7813FCA21201EA03DE138EEA070EEA0606A25BEA071C13FC6C5AB512C0A3EAF01F121E80
9D12>I<173017F01603EE0FE0EE3F80EEFE00ED03F8ED0FC0033FC7FC157C15F05D5D5D
818115F881157F6F7EED0FE06F7E00206E7E00606E7E00406EB4FC00C0ED6F801667EE63
C06CED61E06C913803E0F000FC91381FC0783BFFC003FF807F6CB538FE003F6C02F8131F
6C02801307000101F8C8FC30247BA234>215 D<140C143C14FCEB03F8EB0FE0EB3F8001
FEC7FCEA03F0EA0FC048C8FC123C12381230122012301238123E123FEA1FC06C7EEA03F8
6C7E6C7E137FEB3FC0EB1BE01319EB18F01478EB383CEB781E39FFF01FC0EBE00FEBC007
38FE00011A2380A219>I<140C147C495AEB07E0011FC7FCEB7C0C3801F03C3807C0FC38
0F03F8380C0FE038003F8001FEC7FCEA03F0EA0FC048C8FC123C12381230122012301238
123E123FEA1FC06C7EEA03F86C7E6C7E137FEB3FC0EB1BE01319EB18F01478EB383CEB78
1E39FFF01FC0EBE00FEBC00738FE00011A2880A719>218 D<140CA2141CB180A9140F00
101480003014F05A140D48EB0C701500A47E141C6C5B38FC01F8B55A6C13C06C5BD80FFC
C7FC1C2E7BA121>I<133813FC487EEA03DE138F3807C780380FEFC0381FFFE000FD13FC
12F838F07F7C38E01E1C160C808B16>222 D<1308131CA3130890C8FCA2140214071580
15E00010EB03FC1230481301159C0040148000C013007E14017EEC0300007C130F007F13
7E6CB45A5C000F13E06C90C7FC1E1B7C8E21>I<EA03FCEA0FFEEA1DFF121F5A6C5A1203
6C5A1207EA1FFE38FF3FC0EAFE1FEAF80FEAC003120E808D12>227
D<7F487EA36C5A90C7FCA7EA03FCEA0FFEEA1DFF121F5A6C5A12036C5A1207EA1FFE38FF
3FC0EAFE1FEAF80FEAC003121A809912>231 D<1380EA01C0A3EA00801300A8EA0380EA
07C0EA0FE013F0121EEA1C70A213F8121FA2EA07B8EA00181330EAFFF0A213E013000D1E
809D0D>234 D<EA0410EA0E38A3EA0410C7FCA8EA0380EA07C0EA0FE013F0121EEA1C70
A213F8121FA2EA07B8EA00181330EAFFF0A213E013000D1E809D0D>236
D<143014F01303EB0FE0EB3F80EBFE00EA03F0EA0FC048C7FC123C123812301220123012
38123C123F6C7E6C7E12036C7E6C7E13707F1318A413381378B45A5B5B48C7FC142280A1
12>238 D<1430A2147C147EA2147CA21470AB1430A9121012305AA25AA47E6C13E0EAFC
07B512C06C1380383FFE00EA1FF0172A7BA11A>241 D<5A5AEA078013C0A21380A21300
A47E1380AA1201A612031207EAFF00A25A12F80A2280A10A>243
D<131C137E13FEEA01FF13CF1203EA07EFEA0FFF5A12FDEAF87EEAF01CEAE000100D808C
11>245 D<13101338A3131090C7FCA5142014301470A200101378003013385A14185AA4
14306C137038F801E038FFBFC0387FFF80EBFE00EA1FF0151D7B931A>I<1204120EA312
04C7FCA45AEA038013C0A21201A21200120112FF1380130012FC0A1580940A>I<1302EB
0F8014C0131F14E0133913381339133FA2131FEB0060A214E014C013011303EB0780EB0F
00133FEAC0FEEA7FFCEA0FF8EA03E01318828B12>I<1238123C127FA21380EAC7C012C1
A212C012C112F7EAFF80A2EA7E000A0E7B8E10>I<130F5B5BA2137713E313C3EA018313
87EA030E131EEA023CEA07F838FFF0FE13FFA3381FFC00EA07FFEA060F38070380120313
8113C3EA01FF14007E137E171C809016>I<EC01FC0008130F0018133F48137F0020EBF8
0000605B80ECFFC048EB7FE06CEB1FF0140015706C146000FCEB01E0397FC00FC090B512
006C5B000F13F8000113C01E137B8323>252 D<153E15FF5CEC03C7EC0702EC0C005C00
085B1218481370122000601378147F004014F000C0EB3FF814036CEB0038A26C14706C14
F000FEEB03E0397FC03F8090B512006C5B000F13F000031380201A7B9026>I<5AEA0380
13C0A21201A21200120112FF1380130012FCC7FCA3EA1080EA39C0A3EA10800A14808B0A
>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 9 1
9 0 bop 2 1334 18 1169 v 18 151 1890 2 v 18 1316 2 1165
v 588 1202 a @beginspecial 72 @llx 72 @lly 540 @urx 720
@ury 1800 @rwi @setspecial
%%BeginDocument: escher.ps
% If you're concerned that the cpu in your PostScript printer will atrophy
% from disuse, here is another Escher-like contribution to to keep it busy
% for a while.  It uses PostScript color commands, but will still work on
% a monochrome printer (but isn't very pretty in black & white).
% 
% The butterflies are arranged in a hexagonal grid (wallpaper group p6),
% and the moveto, lineto, curveto commands used to render the tesselation
% are redefined so as to impose a nonlinear transform that shrinks the
% infinite plane to an ellipse.  This is a sleazy way to mimic Escher's
% "circle limit" sorts of things. 
%
% The butterfly permimeter was made by imposing all the symmetry constraints
% on a path, and then that path was filled in using Adobe Illustrator
%
% The routines Xform and next_color are easy to change if you want to hack
% with them. The code was written to sacrifice efficiency for readability.
%
% Bob Wallis
%
% UUCP {sun,pyramid,cae780,apple}!weitek!wallis

%statusdict begin waittimeout 6000 lt	% if you have a slow printer, you
%   {0 60 6000 setdefaulttimeouts}	% might need to uncomment this
%if end

/nlayers 1 def		% 1 takes about 10 minutes on a LW+; 2 takes 4x longer
/warp 1 def		% 1 -> ellipsoidal distortion; 0 -> flat Euclidean
/inch {72 mul} def 

/x4 152 def /y4 205.6 def		% 6 fold rotation center of bfly
/x12 387.20 def /y12 403.84 def		% 3 fold center of bfly

/dx x4 x12 sub def			% [dx,dy] = distance between the
/dy y4 y12 sub def			% two fixed points above

/Dm dx dup mul  dy dup mul 		% magnitude of basis vectors of
    add sqrt 3 sqrt mul 		% parallelogram lattice
def					% = |dx,dy| * sqrt(3)

/Da dy dx atan 30 add def
/D1x Dm Da cos mul def			% [D1x, D1y] = basis vector vector #1
/D1y Dm Da sin mul def			% = [Dm,0] exp(j30)

/Da dy dx atan 30 sub def
/D2x Dm Da cos mul def			% [D2x, D2y] = basis vector vector #2
/D2y Dm Da sin mul def			% = [Dm,0] exp(-j30)
 
/m { moveto} def
/L {lineto} def
/S {stroke} def
/c {curveto} def
/f {closepath fill} def
/F {closepath fill} def
/g { setgray} def

/FillStroke {				% fill interior & stroke black border
	closepath gsave fill grestore 0 setgray stroke
} def

%
% Description of 1 butterfly
%
/body {
	314.96 280.19 m
	383.4 261.71 445.11 243.23 513.52 224.68 c
	463.68 256.59 490.26 328.83 446.99 360.76 c
	423.71 347.32 397.08 339.7 367.07 337.9 c
	388.93 358.28 414.14 372.84 442.73 381.58 c
	426.68 398.18 394.07 389.7 387.2 403.84 c
	371.52 404.96 362.56 372.48 340.16 366.88 c
	346.88 396.01 346.88 425.12 340.16 454.24 c
	326.72 427.35 320 400.48 320 373.6 c
	270.71 352.1 221.44 411.23 168.88 384.02 c
	189.04 388.03 202.48 380.4 212.57 366.95 c
	216.72 350.85 209.23 341.46 190.1 338.79 c
	177.34 343.57 167.94 354.17 161.9 370.59 c
	176.06 305.52 132.02 274.05 152 205.6 c
	201.29 257.12 250.56 234.72 299.84 279.52 c
	288.64 266.08 284.16 252.64 286.4 239.2 c
	298.27 223.97 310.15 222.18 322.02 233.82 c
	328.62 249.28 328.51 264.74 314.96 280.19 c
	FillStroke
} def

/eyes {
	294.8125 238.3246 m
	296.9115 238.3246 298.6132 242.7964 298.6132 248.3125 c
	298.6132 253.8286 296.9115 258.3004 294.8125 258.3004 c
	292.7135 258.3004 291.0118 253.8286 291.0118 248.3125 c
	291.0118 242.7964 292.7135 238.3246 294.8125 238.3246 c
	closepath gsave 1 g fill grestore 0 g S
	
	319.5 241.1782 m
	321.7455 241.1782 323.5659 245.4917 323.5659 250.8125 c
	323.5659 256.1333 321.7455 260.4468 319.5 260.4468 c
	317.2545 260.4468 315.4341 256.1333 315.4341 250.8125 c
	315.4341 245.4917 317.2545 241.1782 319.5 241.1782 c
	closepath gsave 1 g fill grestore 0 g S
	0 g
	296.875 242.0939 m
	297.4608 242.0939 297.9356 243.479 297.9356 245.1875 c
	297.9356 246.896 297.4608 248.2811 296.875 248.2811 c
	296.2892 248.2811 295.8143 246.896 295.8143 245.1875 c
	295.8143 243.479 296.2892 242.0939 296.875 242.0939 c
	f
	0 g
	318.5 243.7707 m
	319.281 243.7707 319.9142 245.0766 319.9142 246.6875 c
	319.9142 248.2984 319.281 249.6043 318.5 249.6043 c
	317.719 249.6043 317.0858 248.2984 317.0858 246.6875 c
	317.0858 245.0766 317.719 243.7707 318.5 243.7707 c
	f
} def	

/stripes {
	292 289 m
	252 294 241 295 213 279 c
	185 263 175 252 159 222 c
	S
	285 313 m
	239 326 226 325 206 315 c
	186 305 164 278 161 267 c
	S
	298 353 m
	262 342 251 339 237 355 c
	223 371 213 380 201 383 c
	S
	330 288 m
	384 293 385 292 418 280 c
	451 268 452 264 473 247 c
	S
	342 306 m
	381 311 386 317 410 311 c
	434 305 460 287 474 262 c
	S
	345 321 m
	352 357 359 367 379 377 c
	399 387 409 385 426 382 c
	S
	327.75 367.75 m
	336.5 392.25 333.682 403.348 335.25 415.5 c
	S
	320 364.75 m
	322 361.75 323.5 360.5 326.25 360 c
	329 359.5 332 360.5 334 362.75 c
	S
	316.25 356.5 m
	318.75 353.25 320 353 323.25 352.25 c
	326.5 351.5 329 352 331.5 353.25 c
	S
	312.5 349 m
	316.75 345.5 318.25 344.5 321.25 343.75 c
	324.25 343 327 344 329.75 346 c
	S
	310.75 340.75 m
	314.25 336.5 316.25 335.25 320 335.25 c
	323.75 335.25 327 336.5 329.25 338 c
	S
	308.5 332 m
	311.75 328.5 312.5 327.25 317 327 c
	321.5 326.75 325.75 328.25 327.75 329.75 c
	S
	305 322 m
	309.5 317.75 310.75 317 315 316.5 c
	319.25 316 322.25 318 324.75 320 c
	S
	302.25 311 m
	307 307.5 307.75 306.25 312.75 306 c
	317.75 305.75 320 307.25 323.75 309.5 c
	S
	301.25 298.25 m
	304.5 292.75 305.25 292 308.25 292 c
	311.25 292 313.75 293.75 315.75 295.75 c
	S
} def
/nostrils {
	0 g
	304.062 227.775 m
	304.599 227.775 305.034 228.883 305.034 230.25 c
	305.034 231.616 304.599 232.724 304.062 232.724 c
	303.525 232.724 303.09 231.616 303.09 230.25 c
	303.09 228.883 303.525 227.775 304.062 227.775 c
	f
	304.062 230.25 m
	F
	309.562 228.275 m
	310.099 228.275 310.534 229.383 310.534 230.75 c
	310.534 232.116 310.099 233.224 309.562 233.224 c
	309.025 233.224 308.59 232.116 308.59 230.75 c
	308.59 229.383 309.025 228.275 309.562 228.275 c
	f
} def
/thorax
{
	327.5 300 m
	316.5 283 315.5 275.5 308 277.5 c
	294 311.5 299 313.5 304 334 c
	309 354.5 315.5 362 322.5 372 c
	329.5 382 327.5 376.5 331 376 c
	334.5 375.5 339.1367 379.1109 339 369 c
	338.5 332 333.4999 324.5 330.5 311.5 c
	0 g S
} def
/spots {
	next_color
	192 242.201 m
	202.1535 242.201 210.3848 251.0655 210.3848 262 c
	210.3848 272.9345 202.1535 281.799 192 281.799 c
	181.8465 281.799 173.6152 272.9345 173.6152 262 c
	173.6152 251.0655 181.8465 242.201 192 242.201 c
	FillStroke
	next_color
	447.5 250.2365 m
	459.6061 250.2365 469.4203 257.5181 469.4203 266.5 c
	469.4203 275.4819 459.6061 282.7635 447.5 282.7635 c
	435.3939 282.7635 425.5797 275.4819 425.5797 266.5 c
	425.5797 257.5181 435.3939 250.2365 447.5 250.2365 c
	FillStroke
	next_color
	401 369.1005 m
	409.5914 369.1005 416.5563 373.5327 416.5563 379 c
	416.5563 384.4673 409.5914 388.8995 401 388.8995 c
	392.4086 388.8995 385.4436 384.4673 385.4436 379 c
	385.4436 373.5327 392.4086 369.1005 401 369.1005 c
	FillStroke
	next_color
	249 348.2721 m
	261.4966 348.2721 271.6274 353.9707 271.6274 361 c
	271.6274 368.0293 261.4966 373.7279 249 373.7279 c
	236.5034 373.7279 226.3726 368.0293 226.3726 361 c
	226.3726 353.9707 236.5034 348.2721 249 348.2721 c
	FillStroke
} def				

/ncolor 6 def
/cidx 0 def

/next_color {
	cidx ncolor div		% hue
	.75			% saturation (change these if you like)
	.8			% lightness
	sethsbcolor
	/cidx cidx 1 add ncolor mod def
} def

/cidx 0 def

/max_r2 	 	% radius^2 for center of outermost ring of butterflies
 Dm nlayers mul 1.05 mul dup mul 
def

/max_radius max_r2 sqrt def
/max_radius_inv 1 max_radius div def
/Dm_inv 1 Dm div def

%
% Ellipsoidal distortion, maps "nlayers" concentric rings of cells into
% an ellipse centered on page

% D  			length of 1 basis vector separating hexagonal cells
% z0			center of 6-fold rotation = origin of shrink xform
% z' = (z - z0)/D 				new coord system
% |z'| = sqrt(x^2 + [(8.5/11)*y]^2)		aspect ratio of paper
% z" = z' * a/M(|z'|)	shrink by "a/M(|z|)" 	as fcn of radius

% At the max radius, we want the shrunk ellipse to be "W" units wide so it
% just fits our output format - solve for scale factor "a"

% zmax = n+0.5  		for n layers of cells
% zmax * [a/M(zmax)] = W	1/2 width of output on paper
% a = M(zmax)*W/zmax		solve for "a"

%/M{dup mul 1 add sqrt}bind def	% M(u) = sqrt(1+|u|^2) = one possible shrink
/M { 1.5 add } bind def		% M(u) = (1.5+|u|)     = another possible one
/W 3.8 inch def 		% 1/2 width of ellipse
/zmax 0.5 nlayers add def	% radius at last layer of hexagons
/a zmax M W mul zmax div def	% a = M(zmax)*W/zmax

/Xform {						% [x0,y0] = ctr ellipse
	Matrix transform
	/y exch def
	/x exch def
	/z x dup mul y .773 mul dup mul add sqrt def	% ellipse radius
	/Scale a z M div def				% z=a/M(|z|)
	x Scale mul x0 add 				% magnify back up
	y Scale mul y0 add 				% [x0+x*s, y0+y*s]
} def


/Helvetica findfont 8 scalefont setfont 
4.25 inch 0.5 inch moveto 
(RHW) stringwidth pop -0.5 mul 0 rmoveto
(RHW) show				% autograph

warp 1 eq {				% redefine commands to use Xform
	/moveto { Xform //moveto} def
	/lineto { Xform //lineto} def
	/curveto { 
		Xform 6 -2 roll
		Xform 6 -2 roll
		Xform 6 -2 roll
		//curveto 
	} def
}if


/bfly {				% paint 1 butterfly
	next_color body
	1 setgray eyes
	stripes
	0 setgray nostrils
	0.5 setgray thorax next_color
	spots
}  def

/x0 x4 def		% center
/y0 y4 def

/T1matrix 			% xlate to center of image
  x0 neg  y0 neg  matrix translate 
def

/Smatrix 			% scale so that 1 basis vector = 1.0
  Dm_inv dup matrix scale 
def

/HexCell {			% 6 butterflys rotated about center of
	/cidx 0 def		% 6 fold symmetry
	/color 0 def
	/T2matrix dx dy matrix translate def
	0 60 300 {
		/angle exch def
		/Rmatrix angle matrix rotate def
		/Matrix 	% translate, rotate, scale - used by Xform
		  T1matrix Rmatrix matrix concatmatrix
		  T2matrix matrix concatmatrix 
		  Smatrix matrix concatmatrix 
		def
		gsave 
		warp 0 eq 	% then may use usual PostScript machinery
		{		% else using Xform
			x0 y0 translate angle rotate 
			.5 dup scale
			dx x0 sub dy y0 sub translate
		} if		
		bfly 
		next_color
		grestore
	} for
} def


%320 x4 sub 240 y4 sub translate 
4.25 inch x4 sub 5.5 inch y4 sub translate


0 setlinewidth
/N 2 def
N neg 1 N {
	/i exch def					% translate to
	N neg 1 N {					% i*D1 + j*D2
		/j exch def				% and draw HexCell
		gsave
		/dx i D1x mul j D2x mul add def		% translate HexCell by
		/dy i D1y mul j D2y mul add def		% [dx,dy]
		/r2 dx dup mul dy dup mul add def	% r^2 = |dx,dy|^2
		r2 max_r2 lt				% inside radius?
		{ 					% yes
		1 r2 max_r2 div sub sqrt 2 div 
		setlinewidth				% make skinnier lines
		HexCell					% 6 butterflies
		}
		if
		grestore
	} for
} for

showpage
%%EndDocument
 @endspecial 552 1289 a Fc(.)565 1280 y(\327\227)616
1287 y(c)603 1289 y(\374\250)-6 b(\244\221\352)12 b(\244\242)g
Fb(P)o(ostScript)i Fc(\361\221\330\252\220)e(\245\220)g
(\371\242\221\324\265\250\220)19 b(:5)12 b(\333\330\252)p
1906 1316 V 18 1318 1890 2 v 2 1334 1890 18 v 87 1459
a(,\302)p 118 1459 3 5 v 3 w(\227\201)p 149 1459 V 3
w(\203)p 165 1459 V 3 w(\263)p 181 1459 V 3 w(\365\221)p
214 1459 V 3 w(\356)h(\374)p 283 1459 V 2 w(\250\300)p
334 1459 V 3 w(\200)p 350 1459 V 2 w(\372)p 374 1459
V 3 w(\365)g(\371)o(\300)p 447 1459 V 3 w(\330)p 475
1459 V 2 w(\310)p 505 1459 V 3 w(\367\220\242)g(,\300)p
598 1459 V 3 w(\252\244\220)g(\374)p 698 1459 V 2 w(\250\221)p
737 1459 V 3 w(\200)p 753 1459 V 2 w(\252\244\221)p 808
1459 V 3 w(\356)f(\202)846 1464 y(b)p 862 1459 V 865
1459 a(\363\221)p 888 1459 V 3 w(\250\244)g Fa(,)p Fb(T)979
1468 y(E)1000 1459 y(X)p Fa(\221)p 1044 1459 V 3 w(\223)h(\374)p
1105 1459 V 3 w(\250\244\221)p 1161 1459 V 3 w(\352)g(\366)r(\201)p
1236 1459 V 3 w(\265)p 1252 1459 V 3 w(\365)g(\374)p
1320 1459 V 3 w(\200)p 1335 1459 V 2 w(\203)p 1351 1459
V 2 w(\273)p 1384 1459 V 3 w(\352\370)5 b(\302)p 1441
1459 V 3 w(\237)26 b Fc(,\374)p 1543 1459 V 2 w(\200)p
1559 1459 V 2 w(\306)p 1589 1459 V 3 w(\275)p 1623 1459
V 3 w(\363)o(\220\201)p 1662 1459 V 3 w(\223\220)13 b(\337)p
1730 1459 V 3 w(\306)p 1761 1459 V 3 w(\237)21 b(]4[)1178
1522 y(.1372)12 b(\337\336\372\223)g(,\323\376)t(\302\252)g
(\374\265\343\200\254)g(\371\221\332\310\367\220\242)87
1618 y(\371\221)p 116 1618 2 5 v 2 w(\332)p 143 1618
V 2 w(\310)p 173 1618 V 2 w(\367\220\242)h(,\302)p 258
1618 V 2 w(\227\201)p 288 1618 V 2 w(\203)p 303 1618
V 1 w(\263)p 317 1618 V 1 w(\365\221)p 348 1618 V 1 w(\356)g(\374)p
414 1618 V(\250\300)p 464 1618 V 2 w(\200)p 479 1618
V 1 w(\372)p 502 1618 V 2 w(\365)f(\371\300)p 574 1618
V 1 w(\330)p 600 1618 V 1 w(\310)p 629 1618 V 2 w(\367\220\242)g(,\300)
p 720 1618 V 2 w(\252\244\220)h(\374)p 819 1618 V 1 w(\250\221)p
857 1618 V 2 w(\200)p 871 1618 V 1 w(\252\244\221)p 926
1618 V 1 w(\356)f(\202)962 1623 y(b)p 978 1618 V 980
1618 a(\363\221)p 1003 1618 V 1 w(\250\244)h Fa(,\374)p
1105 1618 V 1 w(\250\244\221)p 1159 1618 V 2 w(\352)g(\375)o(\221)p
1237 1618 V 2 w(\373)o(\335)p 1284 1618 V 2 w(\334)p
1299 1618 V 1 w(\354)g(\374)p 1361 1618 V(\336)p 1384
1618 V 2 w(\334)p 1399 1618 V 1 w(\344)f(\374)p 1470
1618 V 1 w(\237\220\302)p 1525 1618 V 2 w(\317)25 b Fc(,\374)p
1625 1618 V 1 w(\354\302)p 1657 1618 V 2 w(\252)12 b(\366\220\302)p
1748 1618 V 2 w(\372)p 1772 1618 V 2 w(\365)20 b(]5[)1311
1681 y(.1372)12 b(\337\336\372\223)g(,\323\376)t(\302\252)g
(\374\265\343\200\254)87 1777 y(,\302)p 118 1777 V 2
w(\227\201)p 148 1777 V 2 w(\203)p 163 1777 V 2 w(\263)p
178 1777 V 2 w(\365\221)p 210 1777 V 2 w(\356)h(\374)p
278 1777 V 2 w(\250\300)p 329 1777 V 1 w(\200)p 343 1777
V 2 w(\372)p 367 1777 V 2 w(\365)f(\371\300)p 439 1777
V 2 w(\330)p 465 1777 V 1 w(\310)p 495 1777 V 2 w(\367\220\242)g(,\374)
p 596 1777 V 2 w(\250\221)p 635 1777 V 1 w(\200)p 649
1777 V 2 w(\252\244\221)p 704 1777 V 2 w(\356)g(\202)741
1782 y(b)p 757 1777 V 759 1777 a(\363)o(\221)p 781 1777
V 2 w(\250\244)h Fa(,\264)p 891 1777 V 2 w(\367\201)p
921 1777 V 2 w(\352\221)p 949 1777 V 2 w(\265)p 964 1777
V 1 w(\365)g(\221)p 1008 1777 V 2 w(\223)g(\327)p 1084
1777 V 1 w(\203)p 1099 1777 V 1 w(\352\220\302)p 1140
1777 V 2 w(\227)g(\375\221)p 1216 1777 V 2 w(\372)p 1240
1777 V 1 w(\336)p 1263 1777 V 2 w(\334)p 1278 1777 V
1 w(\354)g(\374)p 1341 1777 V 1 w(\336)p 1364 1777 V
2 w(\334)p 1379 1777 V 1 w(\344)f(\374)p 1451 1777 V
1 w(\237\220\302)p 1505 1777 V 2 w(\317)h Fc(,\375)s(\302)p
1617 1777 V 2 w(\347)p 1636 1777 V 1 w(\254\220)g(\202)p
1717 1777 V 2 w(\367\220\370)5 b(\302)p 1779 1777 V 2
w(\225)20 b(]6[)1149 1839 y(.1372)12 b(\244)s(\201\376)t(\302\372\252)g
(,\323\376)t(\302\252)g(\374\265\343\200\254)g
(\371\221\332\310\367\220\242)87 1935 y(,\302)p 118 1935
V 2 w(\227\201)p 148 1935 V 2 w(\203)p 163 1935 V 2 w(\263)p
178 1935 V 2 w(\365\221)p 210 1935 V 2 w(\356)g(\374)p
276 1935 V(\250\300)p 326 1935 V 2 w(\200)p 341 1935
V 1 w(\372)p 364 1935 V 1 w(\365)h(\371)o(\300)p 435
1935 V 2 w(\330)p 462 1935 V 1 w(\310)p 491 1935 V 1
w(\367\220\242)g(,\374)p 592 1935 V 1 w(\250\221)p 630
1935 V 1 w(\200)p 644 1935 V 1 w(\252\244\221)p 698 1935
V 2 w(\356)f(\202)735 1940 y(b)p 751 1935 V 753 1935
a(\363)o(\221)p 775 1935 V 2 w(\250\244)h Fa(,)o(\374)p
877 1935 V 1 w(\250\244\221)p 931 1935 V 2 w(\352)g(\315)p
997 1935 V 1 w(\203)p 1011 1935 V 1 w(\275)p 1043 1935
V 1 w(\365)g(\244\242)f(\264)p 1164 1935 V 1 w(\263)p
1178 1935 V 1 w(\376)t(\302)p 1211 1935 V 2 w(\330)p
1238 1935 V 1 w(\250\220\264)p 1314 1935 V 2 w(\306)p
1344 1935 V 1 w(\225)1344 1947 y(e)1368 1935 y(\221)p
1381 1935 V 1 w(\223)h(\374)p 1440 1935 V 1 w(\237\220\302)p
1494 1935 V 2 w(\317)25 b Fc(,\244\221)p 1588 1935 V
2 w(\356)12 b(\202)p 1641 1935 V 1 w(\223)t(\302)p 1674
1935 V 2 w(\271)p 1707 1935 V 1 w(\227)h(\202)p 1752
1935 V 2 w(\363)o(\204)21 b(]7[)1278 1998 y(.1372)12
b(,\323\376)t(\302\252)g(\374\265\343\200\254)g
(\371\221\332\310\367\220\242)933 2751 y(9)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
